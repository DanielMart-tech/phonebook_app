{"version":3,"sources":["services/persons.js","components/Filter.js","components/Form.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","personService","getAll","axios","get","then","response","data","create","newPerson","post","remove","id","delete","update","put","Filter","search","handleSearch","onChange","map","element","name","number","Form","newName","newPhone","handleNameChange","handlePhoneChange","handleSubmit","onSubmit","value","type","Person","persons","setPersons","person","onClick","window","confirm","filter","Persons","Notification","message","className","App","useState","setNewName","setNewPhone","setSearch","notification","setNotification","useEffect","initialPersons","redNotification","document","querySelector","style","color","e","target","wanted","toLowerCase","startsWith","preventDefault","repeatedName","find","undefined","newPersonInfo","concat","setTimeout","catch","error","updatedNewPhone","i","findIndex","copiedArrayPersons","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.33491b4a.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseUrl = \"/api/persons/\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newPerson) => {\n  const request = axios.post(baseUrl, newPerson);\n  return request.then((response) => response.data);\n};\n\nconst remove = (id) => {\n  const request = axios.delete(baseUrl + id);\n  return request;\n};\n\nconst update = (id, newPerson) => {\n  const request = axios.put(baseUrl + id, newPerson);\n  return request.then((response) => response.data);\n};\n\nconst personService = { getAll, create, remove, update };\n\nexport default personService;\n","const Filter = ({ search, handleSearch }) => {\n  return (\n    <>\n      <p>\n        filter shown with <input onChange={handleSearch} />\n      </p>\n      {search &&\n        search.map((element) => (\n          <p key={element.name}>\n            {element.name} {element.number}\n          </p>\n        ))}\n    </>\n  );\n};\n\nexport default Filter;\n","const Form = ({\n  newName,\n  newPhone,\n  handleNameChange,\n  handlePhoneChange,\n  handleSubmit,\n}) => {\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <div>\n          name <input value={newName} onChange={handleNameChange} />\n        </div>\n        <div>\n          number <input value={newPhone} onChange={handlePhoneChange} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default Form;\n","import personService from \"../services/persons\";\n\nconst Person = ({ persons, setPersons, person }) => {\n  const handleDelete = (id) => {\n    const confirmation = window.confirm(`Delete ${person.name} ?`);\n    if (confirmation) {\n      personService.remove(id);\n      setPersons(persons.filter((person) => person.id !== id));\n    }\n  };\n\n  return (\n    <p>\n      {person.name} {person.number}{\" \"}\n      <input\n        type=\"submit\"\n        value=\"delete\"\n        onClick={() => handleDelete(person.id)}\n      />\n    </p>\n  );\n};\n\nconst Persons = ({ persons, setPersons }) => {\n  return (\n    <>\n      {persons.map((person) => (\n        <Person\n          persons={persons}\n          setPersons={setPersons}\n          person={person}\n          key={person.id}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default Persons;\n","const Notification = ({ message }) => {\n  if (message === null) return null;\n\n  return <div className=\"notification\">{message}</div>;\n};\n\nexport default Notification;\n","import { useState, useEffect } from \"react\";\nimport personService from \"./services/persons\";\nimport Filter from \"./components/Filter\";\nimport Form from \"./components/Form\";\nimport Persons from \"./components/Persons\";\nimport Notification from \"./components/Notification\";\n\nfunction App() {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newPhone, setNewPhone] = useState(\"\");\n  const [search, setSearch] = useState([]);\n  const [notification, setNotification] = useState(null);\n\n  useEffect(() => {\n    personService.getAll().then((initialPersons) => setPersons(initialPersons));\n  }, []);\n\n  const redNotification = () => {\n    const $notification = document.querySelector(\".notification\");\n    $notification.style.color = \"red\";\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const newPerson = {\n      name: newName,\n      number: newPhone,\n    };\n\n    let repeatedName = persons.find((person) => person.name === newName);\n\n    if (repeatedName === undefined) {\n      personService\n        .create(newPerson)\n        .then((newPersonInfo) => {\n          setPersons(persons.concat(newPersonInfo));\n          setNotification(`Added ${newPersonInfo.name}`);\n          setTimeout(() => setNotification(null), 5000);\n          setNewName(\"\");\n          setNewPhone(\"\");\n        })\n        .catch((error) => {\n          setNotification(error.response.data.error);\n          redNotification();\n          setTimeout(() => setNotification(null), 5000);\n        });\n    } else {\n      const confirmation = window.confirm(\n        `${repeatedName.name} is already added to phonebook, replace the old number with a new one?`\n      );\n      if (confirmation) {\n        personService\n          .update(repeatedName.id, newPerson)\n          .then((updatedNewPhone) => {\n            setNewPhone(updatedNewPhone.number);\n            const i = persons.findIndex(\n              (person) => person.name === repeatedName.name\n            );\n            const copiedArrayPersons = [...persons];\n            copiedArrayPersons[i].number = updatedNewPhone.number;\n            setPersons(copiedArrayPersons);\n            setNotification(\"Telephone number updated\");\n            setTimeout(() => setNotification(null), 5000);\n            setNewPhone(\"\");\n          })\n          .catch((error) => {\n            setNotification(\n              `Information of ${repeatedName.name} has already been removed from server`\n            );\n            redNotification();\n            setTimeout(() => setNotification(null), 5000);\n          });\n        setNewName(\"\");\n        setNewPhone(\"\");\n      } else {\n        setNewPhone(\"\");\n        setNewName(\"\");\n      }\n    }\n  };\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value);\n  };\n\n  const handlePhoneChange = (e) => {\n    setNewPhone(e.target.value);\n  };\n\n  const handleSearch = (e) => {\n    if (e.target.value) {\n      let wanted = persons.filter((person) =>\n        person.name.toLowerCase().startsWith(e.target.value.toLowerCase())\n      );\n      setSearch([...wanted]);\n    } else {\n      setSearch([]);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} />\n      <Filter search={search} handleSearch={handleSearch} />\n      <h3>add a new</h3>\n      <Form\n        newName={newName}\n        newPhone={newPhone}\n        handleNameChange={handleNameChange}\n        handlePhoneChange={handlePhoneChange}\n        handleSubmit={handleSubmit}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={persons} setPersons={setPersons} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}